What happens when you initialize a repository? Why do you need to do it?

  When you initialize a repository, files in that repository will be tracked by
  git. This is our way of telling git to track the files in this directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area is where we prepare changes to be committed to the
  repository. It also allows us to review our changes prior to making a commit.

How can you use the staging area to make sure you have one commit per logical
change?

  We can diff the contents of the staging area with that of the last commit, so
  we can easily review our changes and make sure that what's staged is a
  possible logical commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  With branches, we can diverge from the main/official version of our code and
  do a series of changes there, say experimental ones, or bugfixes, or adding
  a new feature.

How do the diagrams help you visualize the branch structure?

  The diagrams helped visualize git branches. It offered a more intuitive way of
  thinking about branches, since it's easy to see commit histories branching
  out.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
